<?php
class Pieces {
    public function __construct(string $fruit, int $items = 1) {
        if ($fruit == 'apple') {
            $this->pieces = $items * 4;
        } else {
            $this->pieces = $items * 3;
        }
    }
}
	
class FruitProcess {
    private $items;
    private $fruit;
    private $pieces;

    public function __construct(string $fruit, int $items) {
        $this->items = $items;
        $this->fruit = $fruit;
        
        // Create an object of Pieces
        $obj = new Pieces($fruit, $items);
        
        // Check if $obj is an instance of Pieces
        if ($obj instanceof Pieces) {
            $this->pieces = $obj;
        } else {
            throw new Exception("Invalid object type.");
        }
    }

    // Correcting the method signature and return type
    public function getPieces(): Pieces {
        return $this->pieces;
    }
}
try {
    $fruitProcess = new FruitProcess('apple', 2);
    $pieces = $fruitProcess->getPieces();
    echo $pieces->pieces; // Output: 8
} catch (Exception $e) {
    echo $e->getMessage();
}
?>
